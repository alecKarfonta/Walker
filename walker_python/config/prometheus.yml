global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    monitor: 'walker-training-monitor'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets: []

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # Walker Training Application
  - job_name: 'walker-app'
    scrape_interval: 10s
    scrape_timeout: 5s
    metrics_path: '/metrics'
    static_configs:
      - targets: ['walker-app:8080']
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: walker-app:8080

  # Walker Dashboard Exporter API
  - job_name: 'walker-dashboard-api'
    scrape_interval: 30s
    scrape_timeout: 10s
    metrics_path: '/api/metrics'
    static_configs:
      - targets: ['walker-app:2322']
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: walker-app:2322

  # MLflow Tracking Server
  - job_name: 'mlflow'
    scrape_interval: 30s
    scrape_timeout: 10s
    metrics_path: '/metrics'
    static_configs:
      - targets: ['mlflow:5000']
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: mlflow:5000

  # Redis (if metrics are enabled)
  - job_name: 'redis'
    scrape_interval: 30s
    static_configs:
      - targets: ['redis:6379']

  # PostgreSQL (using postgres_exporter if available)
  - job_name: 'postgres'
    scrape_interval: 30s
    static_configs:
      - targets: ['postgres:5432']

  # Node/Container level metrics
  - job_name: 'node-exporter'
    scrape_interval: 30s
    static_configs:
      - targets: []  # Add node-exporter if needed

# Storage configuration
storage:
  tsdb:
    retention: "15d"
    wal-compression: true 